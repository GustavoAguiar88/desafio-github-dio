
DESIGN PATTERNS:
São soluções elegantes, testadas e aprovadas para problemas recorrentes que temos no design e implementação de software.
- Surgiram da experimentação e repetição.
- Não é um padrão pronto para ser aplicado no seu código, é uma descrição/template de como resolver o seu problema nas
mais diferentes situações.

SINGLETON:
Garante uma única instância da classe e um acesso global para ela, centraliza e compartilha recursos.

REPOSITORY:
Faz a abstração ("meio de campo") entre o seu domínio e sua camada de dados, contribui para o isolamento da camada de
acesso a dados.

FACADE:
Define uma interface que abstrai a complexibilidade de subsistemas, ou seja, simplifica a utilização de subsistemas complexos.
